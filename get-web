#!/bin/bash

SCRIPT_PATH=$( which "$0" )
SCRIPT_DIR=$( dirname "${SCRIPT_PATH}" )
PATH="${SCRIPT_DIR}:${PATH}"

DATA_URL="$1"
SITE_TAG="$2"
DATESTAMP="$3"
DATA_DIR="$4"
STEP="$5"
STEPMOD="$6"

if [[ "${DATESTAMP}" == "--first" ]] ; then
	DATESTAMP=""
	STEP=0
	STEPMOD=4
fi

if [ -z "${STEP}" ] ; then
	STEP=0
fi
if [ -z "${STEPMOD}" ] ; then
	STEPMOD=1
fi

SITESTEP=$(( "${STEP}" % "${STEPMOD}" ))

if [ -z "${DATA_DIR}" ] ; then
	DATA_DIR="${HOME}/covid-data"
fi
if [ -z "${DATESTAMP}" ] ; then
	DATESTAMP=$( TZ="UTC" date +"%Y%m%d%H%M%SZ" )
fi

HTMLPAGE_DATA="${DATA_DIR}/html"
if [ ! -z "${SITE_TAG}" ] ; then
	HTMLPAGE_DATA="${HTMLPAGE_DATA}/${SITE_TAG}"
fi
HTMLPAGE_DATA="${HTMLPAGE_DATA}-"

# fetch the basic HTML

URL_OUT="${HTMLPAGE_DATA}${DATESTAMP}.url.txt"
DATA_OUT="${HTMLPAGE_DATA}${DATESTAMP}.html"
HEAD_OUT="${HTMLPAGE_DATA}${DATESTAMP}.head"
WARC_OUT="${HTMLPAGE_DATA}${DATESTAMP}"

CERT_SWITCH=""
if [[ "${SITE_TAG}" =~ ^jeffco ]] ; then
	CERT_SWITCH="--no-check-certificate"
fi

echo "${DATA_URL}" > "${URL_OUT}"
wget ${CERT_SWITCH} --output-document="${DATA_OUT}" --warc-file="${WARC_OUT}" "${DATA_URL}"

# mirror the site
WG_WARC=""
if [[ "${SITESTEP}" -eq 0 ]] ; then
	WG_WARC="--warc-file=${SITE_TAG}-${DATESTAMP}"
fi

	cd "${DATA_DIR}"
	MIRROR_DIR="${DATA_DIR}/mirror_${SITE_TAG}"
	if [ ! -d "${MIRROR_DIR}" ] ; then
		mkdir --verbose "${MIRROR_DIR}"
	fi
	cd "${MIRROR_DIR}"

	if [ ! -d "./warc" ] ; then
		mkdir ./warc
	fi
	mv *.warc *.warc.gz ./warc

	INCLUDE_SWITCH=""
	EXCLUDE_SWITCH="--no-parent"
	if [[ "${SITE_TAG}" == "bar" ]] ; then
		INCLUDE_SWITCH='--include-directories=alabama-state-bar-coronavirus-covid-19-safety-measures,assets,css,images,wp-content,wp-includes'
		EXCLUDE_SWITCH='--exclude-directories=*'
	elif [[ "${SITE_TAG}" == "gov" ]] ; then
		INCLUDE_SWITCH='--include-directories=assets,css,img,js,modules,newsroom,wp-content,wp-includes'
		EXCLUDE_SWITCH='--exclude-directories=*'
	fi

	if [[ "${STEPMOD}" -gt 1 ]] ; then
		WG_RECURSE="--recursive"
		WG_LEVEL="--level=1"
		WG_TIMESTAMPING="--timestamping"
	else
		WG_RECURSE=""
		WG_LEVEL=""
		WG_TIMESTAMPING=""
	fi
	echo '$' wget ${CERT_SWITCH} ${WG_RECURSE} ${WG_LEVEL} ${WG_TIMESTAMPING} --convert-links --adjust-extension ${INCLUDE_SWITCH} ${EXCLUDE_SWITCH} --page-requisites --backup-converted ${WG_WARC} "${DATA_URL}"

	wget ${CERT_SWITCH} ${WG_RECURSE} ${WG_LEVEL} ${WG_TIMESTAMPING} --convert-links --adjust-extension ${INCLUDE_SWITCH} ${EXCLUDE_SWITCH} --page-requisites --backup-converted ${WG_WARC} "${DATA_URL}"

	#mkdir --verbose "${HTMLPAGE_DATA}${DATESTAMP}.mirror"
	#cd "${HTMLPAGE_DATA}${DATESTAMP}.mirror"

	SNAPSHOTDIR=${DATA_DIR}/html/snapshots/${SITE_TAG}
	if [ ! -d "${SNAPSHOTDIR}" ] ; then
		mkdir --parents "${SNAPSHOTDIR}"
	fi

	cd "${MIRROR_DIR}"
	find -name '*.warc' -exec gzip \{\} \;

	echo '$' make-snapshot.pl "${MIRROR_DIR}/" "${SNAPSHOTDIR}"
	make-snapshot.pl "${MIRROR_DIR}/" "${SNAPSHOTDIR}"


echo "Completed HTML front page dump of ${DATA_URL}: " $( date )

